"""
## –ó–∞–¥–∞–Ω–∏–µ üë∑‚Äç‚ôÇÔ∏è

–°–æ–∑–¥–∞–π—Ç–µ –º–æ–¥—É–ª—å `file_classes.py`, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ª–µ–¥—É—é—â–∏–µ –∫–ª–∞—Å—Å—ã:

–†–æ–¥–∏—Ç–µ–ª—å: `ABC`
   - –ú### –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –∏ –µ–≥–æ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏

1. **–ö–ª–∞—Å—Å `AbstractFile`**
   - –ú–µ—Ç–æ–¥—ã:
     - `read()`: –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞.
     - `write(data)`: –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª.
     - `append(data)`: –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª.

2. **–ö–ª–∞—Å—Å `JsonFile`**
   - –†–æ–¥–∏—Ç–µ–ª—å: `AbstractFile`
   - –ê—Ç—Ä–∏–±—É—Ç—ã:
     - `file_path`: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É.
   - –ú–µ—Ç–æ–¥—ã:
     - –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã `read`, `write` –∏ `append` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON-—Ñ–∞–π–ª–∞–º–∏.

3. **–ö–ª–∞—Å—Å `TxtFile`**
   - –†–æ–¥–∏—Ç–µ–ª—å: `AbstractFile`
   - –ê—Ç—Ä–∏–±—É—Ç—ã:
     - `file_path`: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É.
   - –ú–µ—Ç–æ–¥—ã:
     - –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã `read`, `write` –∏ `append` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏.

4. **–ö–ª–∞—Å—Å `CsvFile`**
   - –†–æ–¥–∏—Ç–µ–ª—å: `AbstractFile`
   - –ê—Ç—Ä–∏–±—É—Ç—ã:
     - `file_path`: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É.
   - –ú–µ—Ç–æ–¥—ã:
     - –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã `read`, `write` –∏ `append` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å CSV-—Ñ–∞–π–ª–∞–º–∏.

### –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–æ–≤

–°–æ–∑–¥–∞–π—Ç–µ –º–æ–¥—É–ª—å `file_tests.py`, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ—Ç–µ –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã. –í—ã–∑–æ–≤–∏—Ç–µ –º–µ—Ç–æ–¥—ã `read`, `write` –∏ `append` –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ `if __name__ == "__main__":`.
"""

from abc import ABC, abstractmethod
import json
import csv

class AbstractFile(ABC):
    """
    –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∞–π–ª–∞–º–∏.
    """
    def __init__(self, file_path: str):
        self.file_path = file_path

    @abstractmethod
    def read(self):
        """
        –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞.
        """
        pass

    @abstractmethod
    def write(self):
        """
        –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª.
        """
        pass

    @abstractmethod
    def append(self):
        """
        –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª.
        """
        pass


class TxtFile(AbstractFile):
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏.
    """

    def read(self) -> list[str]:
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞.
        """
        try:
          with open(self.file_path, 'r', encoding='utf-8') as file:
              return file.readlines()
        except FileNotFoundError as e:
            raise FileNotFoundError(f"–§–∞–π–ª {self.file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω") from e

    def write(self, *lines: str) -> None:
        """"
        –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª.
        """
        try:
          with open(self.file_path, 'w', encoding='utf-8') as file:
              for line in lines:
                  file.write(line + '\n')

        except FileNotFoundError as e:
            raise FileNotFoundError(f"–§–∞–π–ª {self.file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω") from e
                
    def append(self, *lines: str) -> None:
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª.
        """
        try:
          with open(self.file_path, 'a', encoding='utf-8') as file:
              for line in lines:
                  file.write(line + '\n')
        
        except FileNotFoundError as e:
            raise FileNotFoundError(f"–§–∞–π–ª {self.file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω") from e

